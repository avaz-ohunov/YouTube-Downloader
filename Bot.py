# Bot.py

import asyncio

import pytube
from pytube import YouTube
from aiogram import Bot, Dispatcher, types, executor
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext

from downloader import *
from BotToken import bot_token
from quality import get_quality


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞
storage = MemoryStorage()

bot = Bot(token = bot_token)
dp = Dispatcher(bot, storage = storage)


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π
keyboard_standart = types.ReplyKeyboardMarkup(resize_keyboard = True)


# –ö–Ω–æ–ø–∫–∏ "–°–∫–∞—á–∞—Ç—å –∞—É–¥–∏–æ" –∏ "–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ"
kb_audio_dl = types.KeyboardButton("–°–∫–∞—á–∞—Ç—å –∞—É–¥–∏–æ")
kb_video_dl = types.KeyboardButton("–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ")

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
keyboard_standart.add(kb_audio_dl).insert(kb_video_dl)


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω–∞
keyboard_cancel = types.ReplyKeyboardMarkup(resize_keyboard = True)
kb_cancel = types.KeyboardButton("–û—Ç–º–µ–Ω–∞")
keyboard_cancel.add(kb_cancel)


# –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
keyboard_delete = types.ReplyKeyboardRemove()


# –ö–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É–¥–∏–æ
class AudioDownload(StatesGroup):
	get_url = State()

# –ö–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–∏–¥–µ–æ
class VideoDownload(StatesGroup):
	get_url = State()
	get_quality = State()


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(commands = ["start"])
async def welcome(message: types.Message):
	await message.answer(
		f"–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤–∞—Å, {message.from_user.first_name}!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µüëá",
		reply_markup = keyboard_standart
	)


# –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–∏—è —Å—Å—ã–ª–∫–∏
@dp.message_handler(state = None)
async def get_command(message: types.Message):
	if message.text == "–°–∫–∞—á–∞—Ç—å –∞—É–¥–∏–æ":
		await message.answer(
			"–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ", 
			reply_markup = keyboard_cancel
		)
		
		await AudioDownload.get_url.set()

	elif message.text == "–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ":
		await message.answer(
			"–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ", 
			reply_markup = keyboard_cancel
		)
		
		await VideoDownload.get_url.set()

	else:
		await message.answer(
			"–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", 
			reply_markup = keyboard_standart
		)


# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –∞—É–¥–∏–æ
@dp.message_handler(state = AudioDownload.get_url)
async def get_video_url(message: types.Message, state: FSMContext):
	if message.text == "–û—Ç–º–µ–Ω–∞":
		await state.reset_state()
		await message.answer(
			"–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –∞—É–¥–∏–æ –æ—Ç–º–µ–Ω–µ–Ω–∞", 
			reply_markup = keyboard_standart
		)

	else:		
		try:
			youtube = YouTube(message.text)	
			await message.answer(
				"–í–∏–¥–µ–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ –∞—É–¥–∏–æ...", 
				reply_markup = keyboard_delete
			)

			audio_download(message.text)

			await bot.send_chat_action(
					message.from_user.id,
					types.ChatActions.UPLOAD_AUDIO
				)

			await asyncio.sleep(5)
			
			with open(f"{youtube.video_id}.mp3", "rb") as audio:
				await message.answer_audio(
					audio, 
					caption = youtube.title,
					reply_markup = keyboard_standart
				)
			
			await state.finish()

			audio_delete(message.text)

		except pytube.exceptions.RegexMatchError:
			await message.answer(
				"–°—Å—ã–ª–∫–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è.\n–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –≤ YouTube!"
			)


# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ
@dp.message_handler(state = VideoDownload.get_url)
async def get_video_url(message: types.Message, state: FSMContext):
	if message.text == "–û—Ç–º–µ–Ω–∞":
		await state.reset_state()
		await message.answer(
			"–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –æ—Ç–º–µ–Ω–µ–Ω–æ", 
			reply_markup = keyboard_standart
		)

	else:
		try:
			await bot.send_chat_action(
				message.from_user.id,
				types.ChatActions.TYPING
			)
			
			youtube = YouTube(message.text)
			await state.update_data(url = message.text)

			keyboard_quality = types.ReplyKeyboardMarkup(resize_keyboard = True)
			qualities = get_quality(message.text)
			
			for q in qualities:
				if q > 720:
					continue

				else:
					keyboard_quality.insert(f"{q}p")

			keyboard_quality.add(kb_cancel)

			await message.answer(
				"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ", 
				reply_markup = keyboard_quality
			)
			
			await VideoDownload.next()

		except pytube.exceptions.RegexMatchError:
			await message.answer(
				"–°—Å—ã–ª–∫–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è.\n–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –≤ YouTube!"
			)

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –≤–∏–¥–µ–æ
@dp.message_handler(state = VideoDownload.get_quality)
async def get_quality_video(message: types.Message, state: FSMContext):
	if message.text == "–û—Ç–º–µ–Ω–∞":
		await state.reset_state()
		await message.answer(
			"–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –æ—Ç–º–µ–Ω–µ–Ω–æ", 
			reply_markup = keyboard_standart
		)

	else:
		try:
			quality_list = [
				"144p", "240p", "360p", 
				"480p", "720p"
			]
			
			if message.text not in quality_list:
				await message.answer("–¢–∞–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–µ—Ç")
			
			elif message.text in quality_list:
				await message.answer(
					"–í–∏–¥–µ–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...", 
					reply_markup = keyboard_delete
				)
				
				data = await state.get_data()
				video_download(data["url"], message.text)
			
				youtube = YouTube(data["url"])

				await bot.send_chat_action(
					message.from_user.id,
					types.ChatActions.UPLOAD_VIDEO
				)

				await asyncio.sleep(5)

				with open(f"{youtube.video_id}.mp4", "rb") as video:
					await message.answer_video(
						video, 
						caption = youtube.title,
						reply_markup = keyboard_standart
					)
				
				video_delete(data["url"])

				await state.finish()

		except:
			await message.answer(
				"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ‚ö†Ô∏è", 
				reply_markup = keyboard_standart
			)

			await state.reset_state()



# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def on_startup(_):
	await bot.send_message(1142268145, "–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")

executor.start_polling(
	dp, skip_updates = True, on_startup = on_startup
)
